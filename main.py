import logging
from aiogram import Bot, Dispatcher
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage

from config import settings
from handlers.common import register_common
from handlers.train import register_train
from handlers.exam import register_exam

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=settings.log_level)
logger = logging.getLogger(__name__)

def get_main_kb() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üéØ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞")],
            [KeyboardButton(text="üìù –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è")],
            [KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"), KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )

async def cmd_start(message: Message):
    await message.answer(
        (
            "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç ¬´–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –û–ì–≠ –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É¬ª –æ—Ç —Å—Ç—É–¥–∏–∏ ¬´–õ–µ–∫—Å–∏–∫–æ–Ω¬ª!*\n\n"
            "–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –æ—Ç—Ç–æ—á–∏—Ç—å –Ω–∞–≤—ã–∫ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –¥–ª—è –ó–∞–¥–∞–Ω–∏—è ‚Ññ 5:\n"
            "‚Ä¢ *–¢–∏—Ä–µ*\n"
            "‚Ä¢ *–î–≤–æ–µ—Ç–æ—á–∏–µ*\n"
            "‚Ä¢ *–ö–∞–≤—ã—á–∫–∏*\n"
            "‚Ä¢ *–ó–∞–ø—è—Ç–∞—è*\n\n"
            "üéØ –ù–∞–∂–º–∏—Ç–µ ¬´–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞¬ª –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /train, —á—Ç–æ–±—ã –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –ø–æ —Ç–µ–º–∞–º.\n"
            "üìù –ü–æ—Å–ª–µ —É–≤–µ—Ä–µ–Ω–Ω–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ —Ä–µ–∂–∏–º ¬´–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è¬ª (/exam) –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ–±—è –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö.\n\n"
            "‚ÑπÔ∏è *–ö–æ–º–∞–Ω–¥—ã:* /train, /exam, /help, /stats"
        ),
        parse_mode="Markdown",
        reply_markup=get_main_kb()
    )

def main():
    bot = Bot(token=settings.bot_token)
    dp = Dispatcher(storage=MemoryStorage())

    # –°—Ç–∞—Ä—Ç–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
    dp.message.register(cmd_start, Command(commands=["start"]))
    dp.message.register(cmd_start, lambda m: m.text == "–ù–∞—á–∞—Ç—å")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
    register_common(dp)
    register_train(dp)
    register_exam(dp)

    logger.info(f"{settings.bot_name} –∑–∞–ø—É—â–µ–Ω")
    dp.run_polling(bot)

if __name__ == "__main__":
    main()
